.create-merge table [_cloudevents_dispatch] (
    [specversion]: string,
    [type]: string,
    [source]: string,
    [id]: string,
    [time]: datetime,
    [subject]: string,
    [datacontenttype]: string,
    [dataschema]: string,
    [data]: dynamic
);


.create-or-alter table [_cloudevents_dispatch] ingestion json mapping "_cloudevents_dispatch_json"
```
[
  {"column": "specversion", "path": "$.specversion"},
  {"column": "type", "path": "$.type"},
  {"column": "source", "path": "$.source"},
  {"column": "id", "path": "$.id"},
  {"column": "time", "path": "$.time"},
  {"column": "subject", "path": "$.subject"},
  {"column": "datacontenttype", "path": "$.datacontenttype"},
  {"column": "dataschema", "path": "$.dataschema"},
  {"column": "data", "path": "$.data"}
]
```


.create-merge table [TelemetryRecord] (
   [id]: string,
   [version]: int,
   [channel]: string,
   [carId]: string,
   [intervalId]: string,
   [sampleCount]: long,
   [frequency]: long,
   [created]: long,
   [timespan]: dynamic,
   [data]: dynamic,
   [lapId]: string,
   [___type]: string,
   [___source]: string,
   [___id]: string,
   [___time]: datetime,
   [___subject]: string
);

.alter table [TelemetryRecord] docstring "{\"description\": \"Represents a telemetry record for a race car.\"}";

.alter table [TelemetryRecord] column-docstrings (
   [id]: "{\"description\": \"The unique identifier of the telemetry record.\", \"type\": [\"null\", \"string\"]}",
   [version]: "{\"description\": \"The version of the telemetry record.\"}",
   [channel]: "{\"description\": \"The channel of the telemetry record.\"}",
   [carId]: "{\"description\": \"The identifier of the race car.\", \"type\": [\"null\", \"string\"]}",
   [intervalId]: "{\"description\": \"The interval identifier of the telemetry record.\", \"type\": [\"null\", \"string\"]}",
   [sampleCount]: "{\"description\": \"The sample count of the telemetry record.\"}",
   [frequency]: "{\"description\": \"The frequency of the telemetry record.\"}",
   [created]: "{\"description\": \"The creation timestamp of the telemetry record.\", \"type\": [\"null\", \"long\"]}",
   [timespan]: "{\"description\": \"The timespan of the telemetry record.\", \"type\": {\"name\": \"RecordRange\", \"type\": \"record\", \"fields\": [{\"name\": \"started\", \"type\": \"long\", \"doc\": \"The start timestamp of the telemetry record.\"}, {\"name\": \"ended\", \"type\": \"long\", \"doc\": \"The end timestamp of the telemetry record.\"}]}}",
   [data]: "{\"description\": \"The telemetry data.\", \"type\": {\"type\": \"array\", \"items\": \"double\"}}",
   [lapId]: "{\"description\": \"The identifier of the lap.\", \"type\": [\"null\", \"string\"]}",
   [___type] : 'Event type',
   [___source]: 'Context origin/source of the event',
   [___id]: 'Event identifier',
   [___time]: 'Event generation time',
   [___subject]: 'Context subject of the event'
);

.create-or-alter table [TelemetryRecord] ingestion json mapping "TelemetryRecord_json_flat"
```
[
  {"column": "___type", "path": "$.type"},
  {"column": "___source", "path": "$.source"},
  {"column": "___id", "path": "$.id"},
  {"column": "___time", "path": "$.time"},
  {"column": "___subject", "path": "$.subject"},
  {"column": "id", "path": "$.id"},
  {"column": "version", "path": "$.version"},
  {"column": "channel", "path": "$.channel"},
  {"column": "carId", "path": "$.carId"},
  {"column": "intervalId", "path": "$.intervalId"},
  {"column": "sampleCount", "path": "$.sampleCount"},
  {"column": "frequency", "path": "$.frequency"},
  {"column": "created", "path": "$.created"},
  {"column": "timespan", "path": "$.timespan"},
  {"column": "data", "path": "$.data"},
  {"column": "lapId", "path": "$.lapId"},
]
```


.create-or-alter table [TelemetryRecord] ingestion json mapping "TelemetryRecord_json_ce_structured"
```
[
  {"column": "___type", "path": "$.type"},
  {"column": "___source", "path": "$.source"},
  {"column": "___id", "path": "$.id"},
  {"column": "___time", "path": "$.time"},
  {"column": "___subject", "path": "$.subject"},
  {"column": "id", "path": "$.data.id"},
  {"column": "version", "path": "$.data.version"},
  {"column": "channel", "path": "$.data.channel"},
  {"column": "carId", "path": "$.data.carId"},
  {"column": "intervalId", "path": "$.data.intervalId"},
  {"column": "sampleCount", "path": "$.data.sampleCount"},
  {"column": "frequency", "path": "$.data.frequency"},
  {"column": "created", "path": "$.data.created"},
  {"column": "timespan", "path": "$.data.timespan"},
  {"column": "data", "path": "$.data.data"},
  {"column": "lapId", "path": "$.data.lapId"},
]
```


.alter table [TelemetryRecord] policy update
```
[{
  "IsEnabled": true,
  "Source": "_cloudevents_dispatch",
  "Query": "_cloudevents_dispatch | where (specversion == '1.0' and type == 'racing.fabrikam.com.TelemetryRecord') | project['id'] = tostring(data.['id']),['version'] = toint(data.['version']),['channel'] = tostring(data.['channel']),['carId'] = tostring(data.['carId']),['intervalId'] = tostring(data.['intervalId']),['sampleCount'] = tolong(data.['sampleCount']),['frequency'] = tolong(data.['frequency']),['created'] = tolong(data.['created']),['timespan'] = todynamic(data.['timespan']),['data'] = todynamic(data.['data']),['lapId'] = tostring(data.['lapId']),___type = type,___source = source,___id = ['id'],___time = ['time'],___subject = subject",
  "IsTransactional": false,
  "PropagateIngestionProperties": true,
}]
```