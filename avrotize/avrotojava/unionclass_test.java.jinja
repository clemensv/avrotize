{# unionclass_test.java.jinja - Union class test template #}

package {{ test_package_name }};

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

{%- if jackson_annotation %}
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.core.JsonProcessingException;
{%- endif %}

public class {{ union_class_name }}Test {

    {%- for type in union_types %}
    @Test
    public void test{{ type | strip_namespace }}SetterAndGetter() {
        {{ union_class_name }} unionInstance = new {{ union_class_name }}(new {{ type }}());
        assertNotNull(unionInstance.get{{ type | strip_namespace }}());
        assertTrue(unionInstance.getValue() instanceof {{ type }});
    }
    {%- endfor %}

    {%- if jackson_annotation %}
    @Test
    public void testJsonSerialization() throws JsonProcessingException {
        ObjectMapper mapper = new ObjectMapper();
        {%- for type in union_types %}
        {{ union_class_name }} unionInstance = new {{ union_class_name }}(new {{ type }}());
        JsonNode jsonNode = mapper.valueToTree(unionInstance);
        assertNotNull(jsonNode);
        {{ union_class_name }} deserializedInstance = mapper.treeToValue(jsonNode, {{ union_class_name }}.class);
        assertNotNull(deserializedInstance.get{{ type | strip_namespace }}());
        assertTrue(deserializedInstance.getValue() instanceof {{ type }});
        {%- endfor %}
    }
    {%- endif %}
}
